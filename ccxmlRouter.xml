<?xml version="1.0" encoding="UTF-8"?>
<ccxml xmlns:voxeo="http://community.voxeo.com/xmlns/ccxml" version="1.0">
	<meta name="author" content="John Dyer"/>
	<meta name="maintainer" content="jdyer@voxeo.com"/>

	<var name="stateVar" expr="'init'"/>
	<var name="conn_id"/>
	<var name="FromHeader"/>
	<var name="sessionID"/>
	<var name="pCharge"/>
	<var name="callerID"/>
	<var name="recordsFound"/>
	<var name="callerName"/>
	<var name="returnPhoneNumber"/>
	<var name="returnPhoneNumberType"/>
	<var name="reasonMessage"/>

	
	<var name="diagnosticMode" expr="'true'"/>
	<!--
	IF CALLER IS NOT IN LIST WE CAN EITHER REDIRECT WITH A FAST BUSY OR WE CAN 
	REDIRECT WITH CUSTOM MESSAGE
	-->
	<!--		reject with busy == 	<var name="noMatchAction" expr="'busy'"/>   -->
	<!--		reject with msg 	== 	<var name="noMatchAction" expr="'msg'"/>    -->
	
	<var name="noMatchAction" expr="'msg'"/>

	<!--
	CUSTOM MESSAGE TO PRESENT TO CALLER, REQUIRES THAT MATCH ACTION BE SET TO 
	'msg' (<var name="noMatchAction" expr="'msg'"/>) IN ORDER TO USE
	-->
	<var name="customMessage" expr="'I am sorry but you are not authorized to call this number, please contact your magager if you feel this is a mistake'"/>

	<script>
		function getNumberFROM(myNumber)
		{
			var myReturn
			startChar=myNumber.indexOf('+')
			endChar= myNumber.indexOf('@')
			myReturn=myNumber.substring(startChar+2,endChar)
			return myReturn
		}
		var myDate = new Date();
		myDate = myDate.valueOf();
	</script>
	<eventprocessor statevariable="stateVar">
		<transition event="connection.alerting">
			<!-- START LOGGING	-->
			<log expr="'[x-sbc-p-charge-info](pCharge): ' + event$.connection.protocol.sip.headers['x-sbc-p-charge-info']"/>
			<log expr="'[x-sbc-from](FromHeader): ' + event$.connection.protocol.sip.headers['x-sbc-from']"/>
			<log expr="'[From]: ' + event$.connection.protocol.sip.headers['From']"/>
			<log expr="'[session.id]: ' + session.id"/>
			<!-- END LOGGING -->
			<assign name="sessionID" expr="session.id"/>
			<assign name="pCharge" expr="event$.connection.protocol.sip.headers['x-sbc-p-charge-info']"/>
			<if cond="diagnosticMode=='true'">
				<log expr="'@@@@[ DIAGNOSTIC MODE ]'"/>
				<assign name="callerID" expr="4074740009"/>
				<assign name="FromHeader" expr="'&lt;sip:4074740004@localhost&gt;;tag=OB4UpeH-JQH.chtR3b6-KlgIdslxrqAc'"/>
				<else/>
				<assign name="callerID" expr="getNumberFROM(FromHeader)"/>
				<assign name="FromHeader" expr="event$.connection.protocol.sip.headers['x-sbc-from']"/>
				<log expr="'@@@@@@@@ FROM: [ ' + getNumberFROM(FromHeader) + ' ]'"/>
			</if>
			<assign name="conn_id" expr="event$.connectionid"/>
			<fetch type="'text/plain'" next="'api.php'" namelist="callerID"/>
		</transition>
		<transition event="fetch.done">
			<script>
				<![CDATA[
			event$.data = event$.data.replace('<?xml version="1.0"?>', ""); // mozilla bug 336551
			event$.data = event$.data.replace("<?xml version='1.0'?>", ""); // mozilla bug 336551
			event$.data = event$.data.replace('<?xml version="1.0" encoding="UTF-8"?>', ""); // mozilla bug 336551
			var data = new XML(event$.data);
			]]>
			</script>
			<log expr="'\n@@@@@@@@\tXML DATA\t@@@@@@@@\n' + data +'\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n'"/>
			<assign name="recordsFound" expr="data.match.@count.toString()"/>
			<assign name="callerName" expr="data.match.name.toString()"/>
			<assign name="returnPhoneNumber" expr="data.match.number.toString()"/>
			<assign name="returnPhoneNumberType" expr="data.match.type.toString()"/>			
			
			<!--
			<log expr="'\n@@@@[noMatchAction] ' + noMatchAction "/>
			<log expr="'\n@@@@[recordsFound] ' + recordsFound "/>
			<log expr="'\n@@@@[callerName] ' + callerName "/>
			<log expr="'\n@@@@[returnPhoneNumber] ' + returnPhoneNumber "/>
			<log expr="'\n@@@@[returnPhoneNumberType] ' + returnPhoneNumberType "/>
			-->
			<if cond="Number(recordsFound)&gt;1">
					<assign name="reasonMessage" expr="data.match.reason.toString()"/>			
					<log expr="'\n@@@@[reasonMessage] ' + reasonMessage "/>
					<assign name="stateVar" expr="'promptApplicationError'"/>
					<accept connectionid="conn_id"/>  
					
		 	<elseif cond="Number(recordsFound)==0"/>
					
					<if cond="noMatchAction=='msg'">
							<log expr="'@@@@[ REJECTING CALL WITH CUSTOM MSG ]'"/>
							<assign name="stateVar" expr="'promptRejectMsg'"/>
							<accept connectionid="conn_id"/>  
						<elseif cond="noMatchAction=='busy'"/>
							<log expr="'\n@@@@@@@@@@@@@@@@@@@@@@\nREJECT CALL\tSIP/603\n@@@@@@@@@@@@@@@@@@@@@@\n'"/>
							<reject connectionid="conn_id" reason="'603'"/>
					</if>
		 	</if>
		 <!-- <redirect dest="redirectRoute" connectionid="conn_id"/>-->
		</transition>
		<transition event="connection.connected" state="promptApplicationError">
			<log expr="'@@@@[APPLICATION.ERROR.PROMPT]'"/>		
			<dialogstart src="'null://?text=Sorry there has been an application error, please try again later&amp;termdigits=*'" type="'application/x-texttospeech'"/>
		</transition>
    
		<transition event="connection.connected" state="promptRejectMsg">
			<log expr="'@@@@[APPLICATION.ERROR.PROMPT]'"/>		
			<dialogstart src="'null://?text='+customMessage+'&amp;termdigits=*'" type="'application/x-texttospeech'"/>
		</transition>



		<transition event="dialog.exit">
			<log expr="'@@@@@ ENDING APPLICATION'"/>
			<send name="'user.LOG_APPLICATION_ERROR'" target="session.id"/>
		</transition>    
		
		
		<transition event="CONNECTION.REDIRECTED">
			<log expr="'Connection Redirected' "/>
			<send name="'user.LOG_CALL_REDIRECT'" target="session.id"/>
		</transition>
		<transition event="CONNECTION.FAILED">
			<if cond="event$.reason == 'rejected'">
				<send name="'user.LOG_CALL_REJECTED'" target="session.id"/>
				<else/>
				<log expr="'@@@@@ CONNECTION FAILED - REASON [' + event$.reason + ']'"/>
				<send name="'user.LOG_CALL_ERROR'" target="session.id"/>
			</if>
		</transition>
		<transition event="error.*">
			<log expr="'An error has occured (' + event$.reason + ').  Exiting application.'"/>
			<send name="'user.LOG_APPLICATION_ERROR'" target="session.id"/>
		</transition>            

		<transition event="user.LOG_CALL_REDIRECT">
			<assign name="stateVar" expr="'postCallCleanUp'"/>
			<var name="callDisposition" expr="'Redirected'"/>
			<log expr="'@@@@@@ REDIRECTED CALL - Time[Epoch]: ' + myDate + ' - SessionID: ' + sessionID + ' - CallerID: ' + callerID + ' - Call Disposition: ' + callDisposition"/>
			<send target="'../utilities/logCatcher.php'" name="'http.get'" delay="'250ms'" targettype="'basichttp'" namelist="sessionID callerID callDisposition myDate"/>
		</transition>
		<transition event="user.LOG_CALL_REJECTED">
			<assign name="stateVar" expr="'postCallCleanUp'"/>
			<var name="callDisposition" expr="'Rejected'"/>
			<log expr="'@@@@@@ REJECTED CALL - Time[Epoch]: ' + myDate + ' - SessionID: ' + sessionID + ' - CallerID: ' + callerID + ' - Call Disposition: ' + callDisposition"/>
			<send target="'../utilities/logCatcher.php'" name="'http.get'" delay="'250ms'" targettype="'basichttp'" namelist="sessionID callerID callDisposition myDate"/>
		</transition>
		<transition event="user.LOG_CALL_ERROR">
			<assign name="stateVar" expr="'postCallCleanUp'"/>
			<var name="callDisposition" expr="'Error'"/>
			<log expr="'@@@@@@ REDIRECTED CALL - Time[Epoch]: ' + myDate + ' - SessionID: ' + sessionID + ' - CallerID: ' + callerID + ' - Call Disposition: ' + callDisposition"/>
			<send target="'../utilities/logCatcher.php'" name="'http.get'" delay="'250ms'" targettype="'basichttp'" namelist="sessionID callerID callDisposition myDate"/>
		</transition>
		<transition event="user.LOG_APPLICATION_ERROR">
			<assign name="stateVar" expr="'postCallCleanUp'"/>
			<var name="callDisposition" expr="'Error'"/>
			<log expr="'@@@@@@ REDIRECTED CALL - Time[Epoch]: ' + myDate + ' - SessionID: ' + sessionID + ' - CallerID: ' + callerID + ' - Call Disposition: ' + callDisposition"/>
			<send target="'../utilities/logCatcher.php'" name="'http.get'" delay="'250ms'" targettype="'basichttp'" namelist="sessionID callerID callDisposition myDate"/>
		</transition>
		<transition event="send.SUCCESSFUL" state="postCallCleanUp">
			<log expr="'@@@@: SEDNING USER.GOODBYE'"/>
			<send name="'USER.GOODBYE'" target="session.id" targettype="'ccxml'" delay="'250ms'"/>
		</transition>
		<transition event="USER.GOODBYE" state="postCallCleanUp">
			<log expr="'@'"/>
			<log expr="'@@'"/>
			<log expr="'@@@'"/>
			<log expr="'@@@@'"/>
			<log expr="'@@@@'"/>
			<log expr="'@@@'"/>
			<log expr="'@@'"/>
			<log expr="'@'"/>
			<exit/>
		</transition>    
	
		<transition event="send.successful"/>

	</eventprocessor>
</ccxml>
	